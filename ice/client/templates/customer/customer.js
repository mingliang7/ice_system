// Generated by CoffeeScript 1.4.0

Template.ice_customer.onRendered(function() {
  return createNewAlertify('customer');
});

Template.ice_customer.events({
  'click .insert': function() {
    return alertify.customer(fa("plus", "Customer"), renderTemplate(Template.ice_insertTemplate)).maximize();
  },
  'click .update': function() {
    var customer;
    customer = Ice.Collection.Customer.findOne({
      _id: this._id
    });
    return alertify.customer(fa("pencil", "Customer"), renderTemplate(Template.ice_updateTemplate, customer)).maximize();
  },
  'click .remove': function() {
    var id;
    id = this._id;
    return alertify.confirm(fa('remove', 'Remove customer'), "Are you sure to delete " + this.name + "?", function() {
      return Ice.Collection.Customer.remove(id, function(error) {
        if (error === 'undefined') {
          return alertify.error(error.message);
        } else {
          return alertify.warning('Successfully Remove');
        }
      });
    }, null);
  },
  'click .show': function() {
    return alertify.customer(fa('eye', 'Customer detail'), renderTemplate(Template.ice_customerShowTemplate, this));
  }
});

AutoForm.hooks({
  insertTemplate: {
    before: {
      insert: function(doc) {
        var prefix;
        prefix = "" + (Session.get('currentBranch')) + "-";
        doc._id = idGenerator.genWithPrefix(Ice.Collection.Customer, prefix, 6);
        doc.branchId = Session.get('currentBranch');
        return doc;
      }
    },
    onSuccess: function(formType, result) {
    	$('select').each(function(){
        $(this).select2('val', '');
      });
      return alertify.success('Successfully created');
    },
    onError: function(formType, error) {
      return alertify.error(error.message);
    }
  },
  updateTemplate: {
    onSuccess: function(formType, result) {
      alertify.success('Successfully Updated');
      return alertify.customer().close();
    },
    onError: function(formType, error) {
      return alertify.error(error.message);
    }
  }
});
